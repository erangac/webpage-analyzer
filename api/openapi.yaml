openapi: 3.0.3
info:
  title: Webpage Analyzer API
  description: |
    API for analyzing webpages and extracting comprehensive metadata including HTML version, 
    page title, headings structure, link analysis (internal/external/inaccessible), and login form detection.
    
    The service uses parallel processing with a worker pool for efficient analysis and provides
    detailed error handling for various HTTP status codes and network issues.
  version: 1.0.0
  contact:
    name: Webpage Analyzer Team
servers:
  - url: http://localhost:8990
    description: Development server
  - url: https://api.webpage-analyzer.com
    description: Production server

paths:
  /api/health:
    get:
      summary: Health check
      description: Check if the service is running and healthy
      tags:
        - System
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  service:
                    type: string
                    example: "webpage-analyzer"
                required:
                  - status
                  - service

  /api/analyze:
    post:
      summary: Analyze webpage
      description: |
        Analyze a webpage and return comprehensive information including HTML version, 
        page title, headings structure, link analysis, and login form detection.
        
        The analysis is performed using parallel processing with a worker pool for optimal performance.
        The service handles various error scenarios including network issues, invalid URLs, and HTTP errors.
      tags:
        - Analysis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                  description: URL of the webpage to analyze (must be a valid HTTP/HTTPS URL)
                  example: "https://example.com"
              required:
                - url
      responses:
        '200':
          description: Analysis completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebpageAnalysis'
        '400':
          description: Invalid request or webpage not reachable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"

  /api/status:
    get:
      summary: Get service status
      description: Get the current status and capabilities of the analysis service
      tags:
        - System
      responses:
        '200':
          description: Service status retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Service is running and ready for parallel webpage analysis with worker pool"
                required:
                  - status
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to get status"

  /api/openapi:
    get:
      summary: Get OpenAPI specification
      description: Retrieve the OpenAPI specification for this API
      tags:
        - System
      responses:
        '200':
          description: OpenAPI specification
          content:
            application/yaml:
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to read OpenAPI spec"

components:
  schemas:
    WebpageAnalysis:
      type: object
      description: Comprehensive result of webpage analysis
      properties:
        url:
          type: string
          format: uri
          description: URL that was analyzed
          example: "https://example.com"
        html_version:
          type: string
          description: |
            HTML version of the document. Can be "HTML5", "HTML4", "XHTML", 
            or the actual DOCTYPE declaration. Defaults to "HTML5 (implied)" if no DOCTYPE is found.
          example: "HTML5"
        page_title:
          type: string
          description: Page title extracted from the title tag
          example: "Example Domain"
        headings:
          type: object
          description: |
            Count of headings by level (h1, h2, h3, h4, h5, h6). 
            Keys are heading levels, values are counts.
          additionalProperties:
            type: integer
          example:
            h1: 1
            h2: 3
            h3: 5
            h4: 2
        internal_links:
          type: integer
          description: |
            Number of internal links (relative URLs, same domain links, 
            anchor links starting with #)
          example: 15
        external_links:
          type: integer
          description: |
            Number of external links (absolute URLs to different domains, 
            mailto:, tel: links)
          example: 8
        inaccessible_links:
          type: integer
          description: |
            Number of inaccessible links (empty href, javascript: links, 
            or links without href attribute)
          example: 0
        has_login_form:
          type: boolean
          description: |
            Whether the page contains a login form. Detected by presence of 
            login-related keywords or password input fields.
          example: false
        analyzed_at:
          type: string
          format: date-time
          description: Timestamp when the analysis was performed
          example: "2024-01-15T10:30:00Z"
        processing_time:
          type: string
          format: duration
          description: |
            Time taken to process the analysis including parallel processing 
            with worker pool
          example: "150ms"
      required:
        - url
        - html_version
        - page_title
        - headings
        - internal_links
        - external_links
        - inaccessible_links
        - has_login_form
        - analyzed_at
        - processing_time

    AnalysisError:
      type: object
      description: |
        Detailed error response when webpage analysis fails. Includes HTTP status code,
        user-friendly error message, and the URL that failed to analyze.
      properties:
        status_code:
          type: integer
          description: |
            HTTP status code of the failed request. Can be standard HTTP codes (400, 404, 500, etc.)
            or custom codes for specific error scenarios (495 for SSL errors, etc.)
          example: 404
        error_message:
          type: string
          description: |
            Detailed, user-friendly error message explaining what went wrong.
            Includes specific guidance for different error types.
          example: "Not Found: The requested webpage could not be found on the server."
        url:
          type: string
          format: uri
          description: URL that failed to analyze
          example: "https://nonexistent.example.com"
      required:
        - status_code
        - error_message
        - url

tags:
  - name: Analysis
    description: Webpage analysis operations with parallel processing
  - name: System
    description: System health, status, and API documentation operations 